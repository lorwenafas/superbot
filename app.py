from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.markdown import hlink
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
import logging

from keyboards import menu, menu1, menu2, menu3, back
from states import Furniture, Candidate, Clean, comanda


API_TOKEN = "6220809223:AAGIUlYSj86lwwY_I3H8tkkrY2S3Rz37crk" #"6190703718:AAGLJgg90Xj8-V4Fik9vGWP9eyLKT73XXrc"
ADMINS = [556370377] # —Å–ø–∏—Å–æ–∫ telegram id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

@dp.message_handler(commands=['start']) 
async def send_welcome(message: types.Message):
   await message.reply("–ü—Ä–∏–≤–µ—Ç, –∫–æ–ª–ª–µ–≥–∞! –ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç? –ï—Å–ª–∏ —É —Ç–µ–±—è —á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –î–ú–°, —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏–ª–∏ –í–¢–ë–µ—à–∫–∞—Ö, —Ç–æ –≤—ã–±–µ—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ç–µ–º–∞—Ç–∏–∫—É –∏ —Å–ª–µ–¥—É–π –¥–∞–ª—å–Ω–µ–π—à–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –•–æ—Ä–æ—à–µ–≥–æ —Ç–µ–±–µ –¥–Ω—èüòé", reply_markup=menu,)


# –î–ú–°
@dp.message_handler(text=["–î–ú–°üíä"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    keyboard.add(button_1)
    button_2 = "–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
    keyboard.add(button_2)
    button_3 = "3 –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç–∞—é, –∞ –î–ú–° –Ω–µ –ø—Ä–∏—à—ë–ª"
    keyboard.add(button_3)
    button_4 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_4)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å?", reply_markup=keyboard)

@dp.message_handler(text=["–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"])
async def echo(message: types.Message):
   await message.answer('<a href="https://apps.apple.com/ru/app/%D1%81%D0%BE%D0%B3%D0%B0%D0%B7-%D0%BC%D0%B5%D0%B4-%D0%BF%D0%BE%D0%BB%D0%B8%D1%81-%D0%BE%D0%BC%D1%81-%D0%BC%D0%B5%D0%B4%D0%B8%D1%86%D0%B8%D0%BD%D0%B0/id1583604507">–î–ª—è IOS.</a>',parse_mode="HTML")
   await message.answer('<a href="https://play.google.com/store/apps/details?id=ru.sogaz.app&hl=ru">–î–ª—è Android.</a>',parse_mode="HTML" , reply_markup=menu)

@dp.message_handler(text=["–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"])
async def echo(message: types.Message):
   await message.answer ("–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —É—Å–ª—É–≥–∞—Ö –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥—è—Ç –≤ —Ç–≤–æ–π –î–ú–°, –æ–±—Ä–∞—Ç–∏—Å—å –Ω–∞ –ì–õ –°–æ–≥–∞–∑–∞ 8(800)333 44 19.", reply_markup=menu)

@dp.message_handler(text=["3 –º–µ—Å—è—Ü–∞ —Ä–∞–±–æ—Ç–∞—é, –∞ –î–ú–° –Ω–µ –ø—Ä–∏—à—ë–ª"])
async def echo(message: types.Message):
   await message.answer ("–î–ú–° –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–∞ —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2-—Ö –Ω–µ–¥–µ–ª—å —Å –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞. –ï—Å–ª–∏ —Å—Ä–æ–∫ –≤—ã—à–µ–ª, –∞ —Ç–≤–æ–π –î–ú–° —Ç–∞–∫ –∏ –Ω–µ –ø—Ä–∏—à—ë–ª, —Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞ –ø–æ—á—Ç—É DMS_GO@sogaz.ru –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –Ω–∞ –ì–õ –°–æ–≥–∞–∑–∞ 8(800)333 44 19.", reply_markup=menu)
  
@dp.message_handler(text=["<--–ù–∞–∑–∞–¥"])
async def echo(message: types.Message):
   await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)

# –ú–ü –ö–æ–º–∞–Ω–¥–∞
@dp.message_handler(text=["–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –ö–æ–º–∞–Ω–¥–∞üì±"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="IOS")
    keyboard.add(button_1)
    button_2 = "Andoid"
    keyboard.add(button_2)
    button_3 = "–†–∞–±–æ—á–∏–π –ü–ö"
    keyboard.add(button_3)
    button_4 = "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞"
    keyboard.add(button_4)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–ù–∞ –∫–∞–∫–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ö–æ–¥?", reply_markup=keyboard)

@dp.message_handler(text=["IOS"])
async def echo(message: types.Message):
   await message.answer ('<a href="https://apps.apple.com/ru/app/%D0%BC%D0%B5%D1%81%D1%81%D0%B5%D0%BD%D0%B4%D0%B6%D0%B5%D1%80-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0/id1616562120">–°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è IOS. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É. –ó–∞—Ç–µ–º –≤–≤–µ—Å—Ç–∏ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—ë—Ç –≤ Outlook.</a>',parse_mode="HTML", reply_markup=menu)

@dp.message_handler(text=["Andoid"])
async def echo(message: types.Message):
   await message.answer ('<a href="https://play.google.com/store/apps/details?id=center.basis.MessengerTeam">–°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Android. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É. –ó–∞—Ç–µ–º –≤–≤–µ—Å—Ç–∏ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–¥—ë—Ç –≤ Outlook.</a>',parse_mode="HTML", reply_markup=menu)

@dp.message_handler(text=["–†–∞–±–æ—á–∏–π –ü–ö"])
async def echo(message: types.Message):
   await message.answer ("–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ –ö–æ–º–∞–Ω–¥—É —Å –ü–ö, –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –ú–ü —Å —Ç–≤–æ–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –≤—ã–ø–æ–ª–Ω–∏–ª –Ω–∞ –Ω—ë–º –≤—Ö–æ–¥, –æ—Ç–∫—Ä–æ–π –∫–æ–º–∞–Ω–¥—É –Ω–∞ –ü–ö (–Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –µ—Å—Ç—å –∏–∫–æ–Ω–∫–∞), –∑–∞—Ç–µ–º –∑–∞–π–¥–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏--> –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –∫–æ–º–∞–Ω–¥–∞ Web –∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥ —Å –º–æ–Ω–∏—Ç–æ—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞.", reply_markup=menu)

@dp.message_handler(text=["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞"])
async def echo(message: types.Message):
   user_full_name = message.from_user.full_name
   await message.answer ("–£–∫–∞–∂–∏ –§–ò–û, –Ω–æ–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é:", reply_markup=back)
   await comanda.waiting_for_comanda.set()

@dp.message_handler(state=comanda.waiting_for_comanda, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–¢–µ—Ö –ø—Ä–æ–±–ª–µ–∏–∞ —Å –ú–ü –ö–æ–º–∞–Ω–¥–∞. –ü–µ—Ä–µ–¥–∞–π –∏–Ω—Ñ-–∏—é –î—ã–Ω–µ–≤–æ–π –ê–π–∂–∞–Ω. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()


@dp.message_handler(text=["<--–ù–∞–∑–∞–¥"])
async def echo(message: types.Message):
   await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)

# –ü—Ä–æ–±–ª–µ–º–∞ –†–ú
@dp.message_handler(text=["–ß–∏—Å—Ç–æ—Ç–∞ –∏ –ø–æ—Ä—è–¥–æ–∫üîÜ"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ú–µ–±–µ–ª—å")
    keyboard.add(button_1)
    button_2 = "–ò–¢-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"
    keyboard.add(button_2)
    button_3 = "–•–æ–ª–æ–¥–Ω–æ/–∂–∞—Ä–∫–æ"
    keyboard.add(button_3)
    button_4 = "–î—Ä—É–≥–æ–µ"
    keyboard.add(button_4)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Å–ª—É—á–∏–ª–æ—Å—å?", reply_markup=keyboard)

@dp.message_handler(text=["–ú–µ–±–µ–ª—å"])
async def echo(message: types.Message):
   await message.answer ("–£–∫–∞–∂–∏ –§–ò–û, –Ω–æ–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é:", reply_markup=back)
   await Furniture.waiting_for_information.set()

@dp.message_handler(state=Furniture.waiting_for_information, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–°–ª–æ–º–∞–Ω–∞ –º–µ–±–µ–ª—å. –ù—É–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –∑–∞—è–≤–∫—É. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()

@dp.message_handler(text=["–ò–¢-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ"])
async def echo(message: types.Message):
   await message.answer ("–£–∫–∞–∂–∏ –§–ò–û, –Ω–æ–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é:", reply_markup=back)
   await Furniture.waiting_for_information.set()

@dp.message_handler(state=Furniture.waiting_for_information, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–°–ª–æ–º–∞–Ω–æ –ò–¢-–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ. –ù—É–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –∑–∞—è–≤–∫—É. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()      

@dp.message_handler(text=["–•–æ–ª–æ–¥–Ω–æ/–∂–∞—Ä–∫–æ"])
async def echo(message: types.Message):
   await message.answer ("–£–∫–∞–∂–∏ –§–ò–û, –Ω–æ–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é:", reply_markup=back)
   await Furniture.waiting_for_information.set()

@dp.message_handler(state=Furniture.waiting_for_information, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–º. –ù—É–∂–Ω–æ –∑–∞–≤–µ—Å—Ç–∏ –∑–∞—è–≤–∫—É. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–µ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()   

@dp.message_handler(text=["–î—Ä—É–≥–æ–µ"])
async def echo(message: types.Message):
   await message.answer ("–û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Å–∏—Ç—É–∞—Ü–∏—é. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ —Ä–∞–∑–ª–∏–ª –∏–ª–∏ —Å–∏–ª—å–Ω–æ –∏—Å–ø–∞—á–∫–∞–ª, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π! –°–æ –≤—Å–µ–º–∏ –±—ã–≤–∞—é—Ç –Ω–µ–ª–æ–≤–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏. –£–∫–∞–∂–∏ –Ω–æ–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ–±—ã —Å–ª—É–∂–±–∞ –∫–ª–∏–Ω–∏–Ω–≥–∞ –º–æ–≥–ª–∞ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å. –ï—Å–ª–∏ –≤ —Ç—É–∞–ª–µ—Ç–µ –Ω–µ—Ç —Ç—É–∞–ª–µ—Ç–Ω–æ–π –±—É–º–∞–≥–∏, –º—ã–ª–∞, —Ç–æ–∂–µ –æ–ø–∏—à–∏ —Å–∏—Ç—É–∞—Ü–∏—é. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–±—Ä–∞—Ç—å –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å - —Å–æ–æ–±—â–∏.", reply_markup=back)
   await Clean.waiting_for_cleaning_end.set()

@dp.message_handler(state=Clean.waiting_for_cleaning_end, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫–ª–∏–Ω–∏–Ω–≥. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", reply_markup=menu)
      await state.finish()         


# –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
@dp.message_handler(text=["–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–£—Å–ª–æ–≤–∏—è")
    keyboard.add(button_1)
    button_2 = "–ù–∞–ø—Ä–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"
    keyboard.add(button_2)
    button_3 = "–ù–µ –ø—Ä–∏—à–ª–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"
    keyboard.add(button_3)
    button_4 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_4)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å?", reply_markup=keyboard)

@dp.message_handler(text=["–£—Å–ª–æ–≤–∏—è"])
async def echo(message: types.Message):
   await message.answer("–ö–æ–≥–¥–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–æ–±–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –∏ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ä–æ–∫ 3 –º–µ—Å—è—Ü–∞, –∏ –±—É–¥–µ—Ç —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–µ–Ω, —Ç—ã –ø–æ–ª—É—á–∏—à—å –±–æ–Ω—É—Å - 10 —Ç—ã—Å—è—á —Ä—É–±–ª–µ–π (10 —Ç—ã—Å. —Ä—É–±. —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞). –ü–æ–¥—Ä–æ–±–Ω–µ–µ: prohorovao@vtb.ru", reply_markup=menu)

@dp.message_handler(text=["–ù–∞–ø—Ä–∞–≤–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"])
async def echo(message: types.Message):
   await message.answer ("–£–∫–∞–∂–∏ –§–ò–û, –î–† –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=back)
   await Candidate.waiting_for_new_man.set()

@dp.message_handler(state=Candidate.waiting_for_new_man, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–ù–æ–≤—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç. –ü–µ—Ä–µ–¥–∞–π –∏–Ω—Ñ-–∏—é –ü—Ä–æ—Ö–æ—Ä–æ–≤–æ–π –û–ª—å–≥–µ. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–∏ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()

@dp.message_handler(text=["–ù–µ –ø—Ä–∏—à–ª–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"])
async def echo(message: types.Message):
    await message.answer ("–£–∫–∞–∂–∏ –§–ò–û –∫–∞–Ω–¥–∏–¥–∞—Ç–∞, –∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ –ø—Ä–∏—à–ª–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ.", reply_markup=back)
    await Candidate.waiting_for_unrewarded_man.set()
   
@dp.message_handler(state=Candidate.waiting_for_unrewarded_man, content_types=types.ContentType.TEXT)
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞. –ü–µ—Ä–µ–¥–∞–π –∏–Ω—Ñ-–∏—é –ü—Ä–æ—Ö–æ—Ä–æ–≤–æ–π –û–ª—å–≥–µ. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –≤ —Ä–∞–±–æ—Ç–µ. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —É —Å–≤–æ–µ–≥–æ –†–ì –≤ —Ç–µ—á–µ–Ω–∏–∏ 3-—Ö —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.", reply_markup=menu)
      await state.finish()

   #–í–¢–ë–µ—à–∫–∏
@dp.message_handler(text=["–í–¢–ë—à–∫–∏üí∞"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ó–∞ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –í–¢–ë—à–∫–∏?")
    keyboard.add(button_1)
    button_2 = "–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å?"
    keyboard.add(button_2)
    button_3 = "–ö–∞–∫ –∏—Ö –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å?"
    keyboard.add(button_3)
    button_4 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_4)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å?", reply_markup=keyboard)

@dp.message_handler(text=["–ó–∞ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –í–¢–ë—à–∫–∏?"])
async def echo(message: types.Message):
   await message.answer("1.–ó–∞ –ª—É—á—à–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–µ—Å—è—Ü–∞. 2.–õ–∏–¥–µ—Ä—ã –≤–Ω—É—Ç—Ä–∏—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞. 3.–ë–æ–Ω—É—Å –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ (–ª–∏–¥–µ—Ä—ã –¥–æ–ø.—Å–º–µ–Ω, –æ–≤–µ—Ä—Ç–∞–π–º–æ–≤, –Ω–æ—á–Ω—ã—Ö —Å–º–µ–Ω –∏ –ª—É—á—à–∏–µ –§–¢/–ù–°–¢) 4.–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞—Ö –ö–¶.",reply_markup=menu)

@dp.message_handler(text=["–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å?"])
async def echo(message: types.Message):
   await message.answer ("–ù–µ –∑–Ω–∞–µ—à—å –≥–¥–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å? –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –í–¢–ë pro --> –≤—ã–±–∏—Ä–∞–π –ö–¶. –ï—Å–ª–∏ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø/—è –ì–æ–ª–æ—Å –î–ö–û", reply_markup=menu)

@dp.message_handler(text=["–ö–∞–∫ –∏—Ö –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å?"])
async def echo(message: types.Message):
   await message.answer ("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä –º–æ–∂–Ω–æ –≤ –≥—Ä—É–ø–ø–µ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ https://vk.com/dko_vtb.", reply_markup=menu)
  
@dp.message_handler(text=["<--–ù–∞–∑–∞–¥"])
async def echo(message: types.Message):
   await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)

#–ü—Ä–æ—á–µ–µ
@dp.message_handler(text=["–ü—Ä–æ—á–µ–µüëΩ"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å –≤ –ö–¶ –ª—É—á—à–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ?")
    keyboard.add(button_1)   
    button_3 = "–ù–∞—à–∏ Telegram –∫–∞–Ω–∞–ª—ã"
    keyboard.add(button_3)
    button_4 = "–¢–∞–∫—Å–∏"
    keyboard.add(button_4)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –≤–æ–ø—Ä–æ—Å?", reply_markup=keyboard)


@dp.message_handler(text=["–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∂–∏–∑–Ω—å –≤ –ö–¶ –ª—É—á—à–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ?"])
async def echo(message: types.Message):
   await message.answer ("–û–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ —Å–≤–æ—é –∏–¥–µ—é –∏ —É–∫–∞–∂–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ãü§©", reply_markup=back)
   await Clean.waiting_for_good.set()

@dp.message_handler(state=Clean.waiting_for_good, content_types=types.ContentType.ANY) # –ø–æ–º–µ–Ω—è—Ç—å —Ç–µ–∫—Å—Ç!
async def echo(message: types.Message, state: FSMContext):
   if message.text == "<--–ù–∞–∑–∞–¥":
      await message.answer ("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è‚ò∫Ô∏è", reply_markup=menu)
      await state.finish()
   else:
      text_for_admin = "–ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ü–µ—Ä–µ–¥–∞–π –∏–Ω—Ñ-–∏—é –†—É—Å—è–µ–≤–æ–π –ê–Ω–Ω–µ. –¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:\n" + message.text
      for id in ADMINS:
         await bot.send_message(id, text_for_admin)
      await message.answer("–°–ø–∞—Å–∏–±–æ! –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", reply_markup=menu)
      await state.finish()

@dp.message_handler(text=["–ù–∞—à–∏ Telegram –∫–∞–Ω–∞–ª—ã"])
async def echo(message: types.Message):
   await message.answer('<a href="https://t.me/+rgq0RVPE-dwxMWQ6">–ö–∞—Ä—å–µ—Ä–∞ –í–¢–ë.</a>',parse_mode="HTML")
   await message.answer('<a href="https://t.me/+Fn2KGIQd05RjMjFi">–ö–û–°–ú–û.NEWS.</a>',parse_mode="HTML")
   await message.answer('<a href="https://t.me/joinchat/c9A-SXMvCw9lYzY6">–î–ö–û –í–¢–ë.</a>',parse_mode="HTML" , reply_markup=menu)

@dp.message_handler(text=["–¢–∞–∫—Å–∏"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å")
    keyboard.add(button_1)
    button_2 = "–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã"
    keyboard.add(button_2)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–£—Ç–æ—á–Ω–∏ –≤–æ–ø—Ä–æ—Å.", reply_markup=keyboard)

@dp.message_handler(text=["–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å"])
async def echo(message: types.Message):
   await message.answer ("–í –±—É–¥–Ω–∏–π –¥–µ–Ω—å –ø–µ—Ä–µ–¥–∞–π –∏–Ω—Ñ-–∏—é –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ —Ç–∞–∫—Å–∏ —Å–≤–æ–µ–º—É –†–ì. –ï—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ —Å—É–±–±–æ—Ç—É –∏–ª–∏ –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, –Ω–∞–ø—Ä–∞–≤—å –∏–Ω—Ñ-–∏—é –¥–µ–∂—É—Ä–Ω–æ–º—É –†–ì –æ—Ç–≤–µ—Ç–Ω—ã–º –ø–∏—Å—å–º–æ–º –Ω–∞ –µ–≥–æ –∑–∞–ø—Ä–æ—Å –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ç–∞–∫—Å–∏ –≤ Outlook. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–æ 17:00 –∏ —Å—Ç—Ä–æ–≥–æ –ø–æ —Ñ–æ—Ä–º–µ, —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤ –ø–∏—Å—å–º–µ.", reply_markup=menu)

@dp.message_handler(text=["–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã"])
async def echo(message: types.Message):
   await message.answer ("–ï—Å–ª–∏ —Ç–∞–∫—Å–∏ –Ω–µ –ø—Ä–∏–µ—Ö–∞–ª–æ –∏–ª–∏ –≤–æ–¥–∏—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–∫–∞–∑, –ø–æ–∑–≤–æ–Ω–∏ –î–†–ì –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —É–∫–∞–∑–∞–ª –≤ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–º –ø–∏—Å—å–º–µ –≤ –ø–æ—á—Ç–µ. –ï—Å–ª–∏ –î–†–ì –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–æ –≤—ã–∑–æ–≤–∏ —Ç–∞–∫—Å–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏ –ø–µ—Ä–µ–¥–∞–π —ç—Ç—É –∏–Ω—Ñ-–∏—é —Å–≤–æ–µ–º—É –†–ì, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Ç–µ–±–µ –∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ –∑–∞—Ç—Ä–∞—Ç—ã.", reply_markup=menu)

   #–ó–∞—Ä–ø–ª–∞—Ç–∞
@dp.message_handler(text=["–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∞üíµ"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–û–∫–ª–∞–¥")
    keyboard.add(button_1)
    button_2 = "–ü—Ä–µ–º–∏—è"
    keyboard.add(button_2)
    button_3 = "–û—Ç–ø—É—Å–∫–Ω—ã–µ"
    keyboard.add(button_3)
    button_4 = "–ë–æ–ª—å–Ω–∏—á–Ω—ã–µ"
    keyboard.add(button_4)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–ö–∞–∫–æ–π –≤–∏–¥ –≤—ã–ø–ª–∞—Ç —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=keyboard)

@dp.message_handler(text=["–û–∫–ª–∞–¥"])
async def echo(message: types.Message):
   await message.answer ("–û–∫–ª–∞–¥ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è 2 —Ä–∞–∑–∞ –≤ –º–µ—Å—è—Ü: 15 –∏ 30 —á–∏—Å–ª–∞. –í—ã–ø–ª–∞—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —Ä–∞–Ω—å—à–µ, –µ—Å–ª–∏ 15 –∏–ª–∏ 30 —á–∏—Å–ª–æ –≤—ã–ø–∞–¥–∞–µ—Ç –Ω–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å (—Å–±/–≤—Å). –û–∫–ª–∞–¥ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Å–æ–≤ –≤ –º–µ—Å—è—Ü–µ (–º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞ –°–£–†–í),—É–º–Ω–æ–∂–µ–Ω–Ω–æ–≥–æ –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —á–∞—Å–∞. –°–£–†–í - —ç—Ç–æ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É—á—ë—Ç —Ä–∞–±–æ—á–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –°—Ç–æ–∏–º–æ—Å—Ç—å —á–∞—Å–∞ —Ä–∞–∑–Ω–∞—è, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–≤–∞—Ä—Ç–∞–ª–∞, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é. –î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —á–∞—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ: —Ç—Ä–æ–π–Ω–æ–π –æ–∫–ª–∞–¥/–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –≤ –∫–≤–∞—Ä—Ç–∞–ª–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: –æ–∫–ª–∞–¥ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ 30 000 —Ä—É–±., 3 –∫–≤. 2023 - 520 —á–∞—Å–æ–≤. –†–∞—Å—á—ë—Ç –æ–∫–ª–∞–¥–∞ –≤ 3 –∫–≤ 2023: c—Ç–æ–∏–º–æ—Å—Ç—å —á–∞—Å–∞ –≤ 3 –∫–≤. 2023 = (30 000*3)/520 = 173.08 —Ä—É–±. –ò—é–ª—å 2023 = 173.08 * 168 (—Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤) = 29 076 —Ä—É–±. –ê–≤–≥—É—Å—Ç 2023 = 173.08 * 184 —á–∞—Å–∞ = 31 847 —Ä—É–±. –°–µ–Ω—Ç—è–±—Ä—å 2023 = 173.08 * 168 (—Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤) = 29 076 —Ä—É–±. –ö–∞–∫ –º—ã –≤–∏–¥–∏–º, –≤ –∏—é–ª–µ –∏ —Å–µ–Ω—Ç—è–±—Ä–µ –æ–∫–ª–∞–¥ –Ω–∞ 924 —Ä—É–±. –º–µ–Ω—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –æ–∫–ª–∞–¥–∞ –ø–æ –∫–≤–∞—Ä—Ç–∞–ª—É. –ü—Ä–∏ —ç—Ç–æ–º –≤ –∞–≤–≥—É—Å—Ç–µ –Ω–∞ 1 847 —Ä—É–±. –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –ø–æ –∫–≤–∞—Ä—Ç–∞–ª—É. –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è, —Å–∫–æ–ª—å–∫–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª, —Å—Ç–æ–ª—å–∫–æ –∏ –ø–æ–ª—É—á–∏–ª. –ß–µ–º –º–µ–Ω—å—à–µ –Ω–∞ –±–æ–ª—å–Ω–∏—á–Ω–æ–º, —Ç–µ–º –±–æ–ª—å—à–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–∫–ª–∞–¥, –∏ –∫–∞–∫ —Å–ª–µ–¥—Å—Ç–≤–∏–µ, –≤—ã—à–µ –ø—Ä–µ–º–∏—èüòâ", reply_markup=menu)

@dp.message_handler(text=["–ü—Ä–µ–º–∏—è"])
async def echo(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–†–∞—Å—á—ë—Ç –ø—Ä–µ–º–∏–∏")
    keyboard.add(button_1)
    button_2 = "–†–∞—Å—á—ë—Ç –¥–æ–ø. —Å–º–µ–Ω/–æ–≤–µ—Ä—Ç–∞–π–º–æ–≤"
    keyboard.add(button_2)
    button_5 = "<--–ù–∞–∑–∞–¥"
    keyboard.add(button_5)
    await message.answer("–£—Ç–æ—á–Ω–∏ –≤–æ–ø—Ä–æ—Å.", reply_markup=keyboard)
     
@dp.message_handler(text=["–†–∞—Å—á—ë—Ç –ø—Ä–µ–º–∏–∏"])
async def echo(message: types.Message):
   await message.answer ("–ü—Ä–µ–º–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ: (–æ–∫–ª–∞–¥ * % –ø—Ä–µ–º–∏–∏ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è)) * –ò–ü–ü.", reply_markup=menu)
   await message.answer ("–ò–ü–ü —Å—á–∏—Ç–∞–µ—Ç—Å—è: ((35% * –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ê–ù–¢)+(35% * –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º)+(30% * –Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–æ –î–ù))* –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ù–ö–û–ö.", reply_markup=menu)

@dp.message_handler(text=["–†–∞—Å—á—ë—Ç –¥–æ–ø. —Å–º–µ–Ω/–æ–≤–µ—Ä—Ç–∞–π–º–æ–≤"])
async def echo(message: types.Message):
   await message.answer ("–î–æ–ø. —Å–º–µ–Ω–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ç–∞–∫: 32000 * 3 (–∫–æ–ª-–≤–æ –º–µ—Å. –≤ –∫–≤–∞—Ä—Ç–∞–ª–µ) = 96000. –í 3 –∫–≤–∞—Ä—Ç–∞–ª–µ 2023 - 520 —á–∞—Å–æ–≤. 96000/520= 184,60 - —Å—Ç–æ–∏–º–æ—Å—Ç—å 1 —á–∞—Å–∞. –í –¥–æ–ø. —Å–º–µ–Ω–µ 184,6 * 2 = 369,23 —Ä—É–±–ª–µ–π. –ï—Å–ª–∏ —Ç—ã –≤—ã—à–µ–ª, –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –Ω–∞ 9 —á–∞—Å–æ–≤, —Ç–æ –ø–æ–ª—É—á–∏—à—å 369,23 * 9 = 3323 —Ä—É–±–ª—è.", reply_markup=menu)
   await message.answer ("–û–≤–µ—Ä—Ç–∞–π–º - –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ —Ç—ã –ø–æ –ø—Ä–æ—Å—å–±–µ —Å–≤–æ–µ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—à—å—Å—è –≤ –ª–∏–Ω–∏–∏ –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –≤—ã—Ö–æ–¥–∏—à—å –Ω–∞ –ø—Ä–∏–µ–º –∑–≤–æ–Ω–∫–æ–≤ –¥–æ –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã. –ß–∞—Å—ã, –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤ –æ–≤–µ—Ä—Ç–∞–π–º –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –∫–≤–∞—Ä—Ç–∞–ª–∞. –ü–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∞—Å–∞ –æ–≤–µ—Ä—Ç–∞–π–º–∞ –≤ –∫–≤–∞—Ä—Ç–∞–ª–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ —Å—Ç–∞–≤–∫–µ - 1,5. –î–∞–ª–µ–µ –≤—Å–µ –æ–≤–µ—Ä—Ç–∞–π–º—ã –∏–¥—É—Ç –ø–æ –¥–≤–æ–π–Ω–æ–π –æ–ø–ª–∞—Ç–µ.", reply_markup=menu)

@dp.message_handler(text=["–û—Ç–ø—É—Å–∫–Ω—ã–µ"])
async def echo(message: types.Message):
   await message.answer ("–í 2023 –≥–æ–¥—É –æ–±—â–∞—è —Ñ–æ—Ä–º—É–ª–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Å–ª–µ–¥—É–µ—Ç —Å—á–∏—Ç–∞—Ç—å –æ—Ç–ø—É—Å–∫–Ω—ã–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å–Ω–æ–º —É—Ä–æ–≤–Ω–µ. –í—ã–≥–ª—è–¥–∏—Ç —Ñ–æ—Ä–º—É–ª–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: –û—Ç–ø—É—Å–∫–Ω—ã–µ= –°—Ä–µ–¥–Ω–µ–¥–Ω–µ–≤–Ω–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Ö –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞ ‚Äì —ç—Ç–æ —á–∏—Å–ª–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –≤ –ø–µ—Ä–∏–æ–¥ –æ—Ç–ø—É—Å–∫–∞ –∑–∞ –º–∏–Ω—É—Å–æ–º –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –¥–Ω–µ–π. –ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ –≤ –æ—Ç–ø—É—Å–∫ –Ω–µ –≤—Ö–æ–¥—è—Ç –∏ –Ω–µ –æ–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è.", reply_markup=menu)

@dp.message_handler(text=["–ë–æ–ª—å–Ω–∏—á–Ω—ã–µ"])
async def echo(message: types.Message):
   await message.answer ("–í–µ¬≠–ª–∏¬≠—á–∏¬≠–Ω–∞ –ø–æ¬≠—Å–æ¬≠–±–∏—è (–ü), –Ω–∞¬≠—á–∏—Å¬≠–ª—è¬≠–µ¬≠–º–æ¬≠–≥–æ —Ä–∞¬≠–±–æ—Ç¬≠–Ω–∏¬≠–∫—É –∑–∞ –ø–µ¬≠—Ä–∏¬≠–æ–¥ –≤—Ä–µ¬≠–º–µ–Ω¬≠–Ω–æ–π –Ω–µ—Ç—Ä—É¬≠–¥–æ¬≠—Å–ø–æ¬≠—Å–æ–±¬≠–Ω–æ¬≠—Å—Ç–∏, –æ–ø—Ä–µ¬≠–¥–µ¬≠–ª—è¬≠–µ—Ç¬≠—Å—è –ø–æ —Å–ª–µ¬≠–¥—É¬≠—é¬≠—â–µ–π —Ñ–æ—Ä¬≠–º—É¬≠–ª–µ: –ü = –°–î–ó —Ö –°% —Ö –î, –≥–¥–µ –°–î–ó ‚Äì —Å—Ä–µ–¥¬≠–Ω–∏–π –¥–Ω–µ–≤¬≠–Ω–æ–π –∑–∞¬≠—Ä–∞¬≠–±–æ¬≠—Ç–æ–∫; –°% ‚Äî –ø—Ä–æ¬≠—Ü–µ–Ω—Ç, –∑–∞¬≠–≤–∏¬≠—Å—è¬≠—â–∏–π –æ—Ç —Å—Ç—Ä–∞¬≠—Ö–æ¬≠–≤–æ¬≠–≥–æ —Å—Ç–∞–∂–∞ —Ä–∞¬≠–±–æ—Ç¬≠–Ω–∏¬≠–∫–∞ (–ø—Ä–∏ —Å—Ç–∞–∂–µ –±–æ–ª—å—à–µ 8 –ª–µ—Ç —Ä–∞–±–æ—Ç–Ω–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç 100% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –æ—Ç 5 –¥–æ 8 –ª–µ—Ç ‚Äî 80%, –º–µ–Ω—å—à–µ 5 –ª–µ—Ç ‚Äî 60%); –î ‚Äì –∫–æ¬≠–ª–∏¬≠—á–µ¬≠—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–µ—Ç—Ä—É¬≠–¥–æ¬≠—Å–ø–æ¬≠—Å–æ–±¬≠–Ω–æ¬≠—Å—Ç–∏. –°—Ä–µ–¥¬≠–Ω–∏–π –¥–Ω–µ–≤¬≠–Ω–æ–π –∑–∞¬≠—Ä–∞¬≠–±–æ¬≠—Ç–æ–∫ —Ä–∞—Å¬≠—Å—á–∏¬≠—Ç—ã¬≠–≤–∞¬≠–µ—Ç¬≠—Å—è –∑–∞ 2 –∫–∞¬≠–ª–µ–Ω¬≠–¥–∞—Ä¬≠–Ω—ã—Ö –≥–æ–¥–∞, –ø—Ä–µ–¥¬≠—à–µ¬≠—Å—Ç–≤—É¬≠—é¬≠—â–∏—Ö –≥–æ–¥—É –Ω–∞¬≠—Å—Ç—É–ø¬≠–ª–µ¬≠–Ω–∏—è –Ω–µ—Ç—Ä—É¬≠–¥–æ¬≠—Å–ø–æ¬≠—Å–æ–±¬≠–Ω–æ¬≠—Å—Ç–∏.", reply_markup=menu)

if __name__== '__main__':
   executor.start_polling(dp, skip_updates=True)